{
  "_from": "timeago.js",
  "_id": "timeago.js@4.0.0-beta.2",
  "_inBundle": false,
  "_integrity": "sha512-MQkHiYGoB6qZC4DNWsLc9bav+L9hpdulL6sL7okzKR8r1Ipask/tXKAio8T+4jeby8FbpbDvbnCKGrh1bLop3g==",
  "_location": "/timeago.js",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "timeago.js",
    "fetchSpec": "latest",
    "name": "timeago.js",
    "raw": "timeago.js",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/timeago.js/-/timeago.js-4.0.0-beta.2.tgz",
  "_shasum": "4e50a7250626b67e168a934d5e15052119366db1",
  "_shrinkwrap": null,
  "_spec": "timeago.js",
  "_where": "/home/camilo/universidad/software/timeBank",
  "author": {
    "name": "hustcc",
    "url": "https://timeago.org"
  },
  "bugs": {
    "url": "https://github.com/hustcc/timeago.js/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "timeago.js is a simple library (only 1kb) to used to format datetime with `*** time ago` statement. eg: '3 hours ago'. localization supported.",
  "devDependencies": {
    "@babel/cli": "^7.1.5",
    "@babel/core": "^7.1.6",
    "@babel/plugin-proposal-class-properties": "^7.1.0",
    "@babel/plugin-proposal-object-rest-spread": "^7.0.0",
    "@babel/preset-env": "^7.1.6",
    "@types/jquery": "^2.0.40",
    "babel-core": "^7.0.0-bridge.0",
    "babel-jest": "^23.6.0",
    "babel-plugin-add-module-exports": "^1.0.0",
    "babel-plugin-version": "^0.2.2",
    "coveralls": "^3.0.0",
    "cross-env": "^5.1.3",
    "gh-pages": "^2.0.0",
    "jest": "^23.6.0",
    "jest-date-mock": "^1.0.5",
    "jest-expect": "^0.0.1",
    "jsdom": "^11.5.1",
    "lint-md": "^0.0.6",
    "rimraf": "^2.6.2",
    "rollup": "^0.67.4",
    "rollup-plugin-babel": "^4.0.3",
    "rollup-plugin-node-resolve": "^4.0.0",
    "rollup-plugin-uglify": "^6.0.0",
    "size-limit": "^0.18.0"
  },
  "homepage": "https://github.com/hustcc/timeago.js#readme",
  "jest": {
    "collectCoverage": true,
    "collectCoverageFrom": [
      "!**/node_modules/**",
      "!**/vendor/**",
      "!src/localesEntry.js",
      "src/**/*.{js}"
    ],
    "moduleDirectories": [
      "node_modules",
      "src"
    ],
    "moduleFileExtensions": [
      "js",
      "json"
    ],
    "setupFiles": [],
    "setupTestFrameworkScriptFile": "jest-expect",
    "testRegex": "(/__tests__/.*(test|spec))\\.(js)$",
    "testURL": "https://timeago.org",
    "transform": {
      "^.+\\.js?$": "babel-jest"
    }
  },
  "keywords": [
    "*** time ago",
    "date",
    "datetime",
    "javascript timeago",
    "timeago"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "name": "timeago.js",
  "officialName": "timeago.js",
  "optionalDependencies": {},
  "readme": "# timeago.js\n\n> **timeago.js** is a simple library (less than `1 kb`) that is used to format datetime with `*** time ago` statement. eg: '3 hours ago'.\n\n - Localization supported.\n - Time `ago` and time `in` supported.\n - Real-time render supported.\n - Nodejs and browserjs supported.\n - Well tested.\n\n[Official website](https://timeago.org/). 中文版说明文档[点这里](README_zh.md)。 React version here: [timeago-react](https://github.com/hustcc/timeago-react). Python version here: [timeago](https://github.com/hustcc/timeago).\n\n[![Build Status](https://img.shields.io/travis/hustcc/timeago.js.svg)](https://travis-ci.org/hustcc/timeago.js)\n[![Coverage Status](https://coveralls.io/repos/github/hustcc/timeago.js/badge.svg?branch=master)](https://coveralls.io/github/hustcc/timeago.js?branch=master)\n[![gzip](https://img.badgesize.io/https://unpkg.com/timeago.js/dist/timeago.min.js?compression=gzip)](https://unpkg.com/timeago.js/dist/timeago.min.js)\n[![npm](https://img.shields.io/npm/v/timeago.js.svg)](https://www.npmjs.com/package/timeago.js)\n[![npm](https://img.shields.io/npm/dm/timeago.js.svg)](https://www.npmjs.com/package/timeago.js)\n[![npm](https://img.shields.io/npm/l/timeago.js.svg)](https://www.npmjs.com/package/timeago.js)\n\n\nSuch as\n\n```plain\njust now\n12 seconds ago\n3 minutes ago\n2 hours ago\n3 days ago\n3 weeks ago\n6 months ago\n2 years ago\n\nin 12 seconds\nin 3 minutes\nin 2 hours\nin 24 days\nin 6 months\nin 2 years\n```\n\n\n\n## Usage\n\n - Install\n\n```bash\nnpm install timeago.js\n```\n\n - Import\n\n```js\n// ES6\nimport { format, render, cancel, register } from 'timeago.js';\n\n// commonjs\nconst { format, render, cancel, register } = require('timeago.js');\n```\n\nor import with `script` in html file and access global variable `timeago`.\n\n```html\n<script src=\"dist/timeago.min.js\"></script>\n```\n\n - Usage\n\n```js\n// format the time with locale\nformat('2016-06-12', 'en_US');\n```\n\n\n\n## API\n\nThere only 4 API:\n\n - **format(date[, locale = 'en_US', relativeDate = new Date()])**: format a Date instance / timestamp / date string to string.\n - **render(dom[, locale = 'en_US', relativeDate = new Date()])**: make a dom automatic rendering.\n - **cancel([dom])**: cancel automatic rendering.\n - **register(locale, localeFunc)**: register a new locale, build-in locale contains: `en_US`, `zh_CN`.\n\n\n## Case\n\n - format\n\nJust format date into a string.\n\n```js\nimport { format, render, cancel, register } from 'timeago.js';\n\n// format timestamp\nformat(1544666010224);\n// format date instance\nformat(new Date(1544666010224));\n// format date string\nformat('2018-12-12');\n\n// format with locale\nformat(1544666010224, 'zh_CN');\n\n// format with locale and relative date\nformat(1544666010224, 'zh_CN', '2018-11-11');\n\n// e.g.\nformat(Date.now() - 11 * 1000 * 60 * 60); // returns '11 hours ago'\n``` \n\n\n - render & cancel\n \nYou can `render` a dom node with automatic rendering.\n\nHTML code:\n\n```html\n<div class=\"needs_to_be_rendered\" datetime=\"2016-06-30 09:20:00\"></div>\n```\n\nJavascript code:\n\n```js\nvar nodes = document.querySelectorAll('.needs_to_be_rendered');\n\n// use render method to render nodes in real time\ntimeago.render(nodes, 'zh_CN');\n\n// cancel all real-time render task\ntimeago.cancel();\n\n// or cancel for the specific one\ntimeago.cancel(nodes[0])\n```\n\nThe input for `render` method should be DOM object / array, pure javascript DOM node or jQuery DOM object supported.\n\nThe `cancel` method clears all the render timers and release all resources of the instance. Optionally it accepts a single node to cancel timer just for it.\n\n> The DOM object should have the attribute `datetime` with date formatted string.\n\n\n - register\n\nDefault locale is **`en_US`**, and the library supports `en_US` and `zh_CN`. You can register your own language with `register`.\n\n```js\n// the local dict example is below.\nconst localeFunc = (number, index, total_sec) => {\n  // number: the timeago / timein number;\n  // index: the index of array below;\n  // total_sec: total seconds between date to be formatted and today's date;\n  return [\n    ['just now', 'right now'],\n    ['%s seconds ago', 'in %s seconds'],\n    ['1 minute ago', 'in 1 minute'],\n    ['%s minutes ago', 'in %s minutes'],\n    ['1 hour ago', 'in 1 hour'],\n    ['%s hours ago', 'in %s hours'],\n    ['1 day ago', 'in 1 day'],\n    ['%s days ago', 'in %s days'],\n    ['1 week ago', 'in 1 week'],\n    ['%s weeks ago', 'in %s weeks'],\n    ['1 month ago', 'in 1 month'],\n    ['%s months ago', 'in %s months'],\n    ['1 year ago', 'in 1 year'],\n    ['%s years ago', 'in %s years']\n  ][index];\n};\n// register your locale with timeago\nregister('my-locale', localeFunc);\n\n// use it\nformat('2016-06-12', 'my-locale');\n```\n\nCheck out more [locales](src/lang).\n\n\n\n## Contributions\n\n1. The website is based on [rmm5t/jquery-timeago](https://github.com/rmm5t/jquery-timeago) which is a nice and featured project but it depends on jQuery.\n\n2. **locale translations**: The library needs more locale translations. You can:\n\n - Open an issue to write the locale translations, or submit a pull request. How to ? see [locales translation](src/lang/).\n - Please **test** the locale by exec `npm test`. How to write testcase, see [locales test cases](__tests__/lang/).\n\n\n\n# LICENSE\n\nMIT@[https://github.com/hustcc](hustcc)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/hustcc/timeago.js.git"
  },
  "scripts": {
    "build": "npm run build:umd && npm run build:lib && npm run test",
    "build:lib": "rimraf ./lib && cross-env NODE_ENV=babel babel src -d lib",
    "build:umd": "rimraf ./dist && cross-env NODE_ENV=rollup rollup -c && cross-env NODE_ENV=rollup rollup -c rollup.config.all.js",
    "coveralls": "cat ./coverage/lcov.info | coveralls",
    "deploy": "gh-pages -d gh-pages",
    "size": "size-limit",
    "test": "NODE_ENV=babel jest --no-cache && npm run size && lint-md ./"
  },
  "size-limit": [
    {
      "limit": "1 KB",
      "path": "dist/timeago.min.js"
    },
    {
      "limit": "10 KB",
      "path": "dist/timeago.locales.min.js"
    }
  ],
  "summary": "timeago.js is a simple library (less than 1kb) to used to format datetime with `*** time ago` statement. eg: '3 hours ago'.",
  "typings": "./timeago.d.ts",
  "version": "4.0.0-beta.2"
}
